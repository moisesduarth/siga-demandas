<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Renegociacao extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Renegociacao_model');
    } 

    /*
     * Listing of renegociacao
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('renegociacao/index?');
        $config['total_rows'] = $this->Renegociacao_model->get_all_renegociacao_count();
        $this->pagination->initialize($config);

        $data['renegociacao'] = $this->Renegociacao_model->get_all_renegociacao($params);
        
        $data['_view'] = 'renegociacao/index';
        $this->load->view('layouts/main',$data);
    }
    /**
     * Inclusão de renegociação diretamente pela tela do Empréstimo original, já inclui a negociação com ID_Emprestimo, Data e Status
     * Já redireciona para a página de edição da renegociação para inclusao das parcelas
     */
    function criar($ID_Emprestimo) {

        $params = array(
            'ID_Emprestimo' => $ID_Emprestimo,
            'Data_Renegociacao' => date('Y/m/d'),
            'Status_Renegociacao' => '3', //3 - Negociação em Rascunho ainda não foi efetivada
        );
        
        $renegociacao_id = $this->Renegociacao_model->add_renegociacao($params);

        redirect('renegociacao/edit/'.$renegociacao_id);

    }

    /*
     * Adding a new renegociacao
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Data_Renegociacao','Data Renegociacao','required');
		$this->form_validation->set_rules('ID_Emprestimo','ID Emprestimo','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ID_Emprestimo' => $this->input->post('ID_Emprestimo'),
				'Data_Renegociacao' => convertDateYmd($this->input->post('Data_Renegociacao')),
				'Status_Renegociacao' => $this->input->post('Status_Renegociacao'),
            );
            
            $renegociacao_id = $this->Renegociacao_model->add_renegociacao($params);
            redirect('renegociacao/index');
        }
        else
        {
			$this->load->model('Emprestimo_model');
			$data['all_emprestimo_pendente'] = $this->Emprestimo_model->get_all_emprestimo_pendente();
            
            $data['_view'] = 'renegociacao/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    function efetivar($ID_Renegociacao) {

        $data['renegociacao'] = $this->Renegociacao_model->get_renegociacao($ID_Renegociacao);

        #Altera o status da Renegociação para Pendente
        $params = array(
            'Status_Renegociacao' => '0', 
        );
        $this->Renegociacao_model->update_renegociacao($ID_Renegociacao,$params);

        #Alterar o status do Emprestimo para Negociado
        #TODO: Ideal é criar um campo Data_Pagamento original para poder atualizar a Data_Pagamento
        #no ato da efetivação da renegociação, dessa forma o emprestimo não ficará acusando atrazo
        #sendo que já foi negociado, provavelmente para data posterior à data de pagamento original
        $this->load->model('Emprestimo_model');
        $params = array(
            'Status_Emprestimo' => '3', 
        );
        $this->Emprestimo_model->update_emprestimo($data['renegociacao']['ID_Emprestimo'],$params);

        #Envie um novo SMS com o valor da renegociação
        redirect('mensagem/renegociacao/'.$ID_Renegociacao);

    }

    /*
     * Editing a renegociacao 
     */
    function edit($ID_Renegociacao)
    {   
        // check if the renegociacao exists before trying to edit it
        $data['renegociacao'] = $this->Renegociacao_model->get_renegociacao($ID_Renegociacao);
        
        if(isset($data['renegociacao']['ID_Renegociacao']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Data_Renegociacao','Data Renegociacao','required');
			$this->form_validation->set_rules('ID_Emprestimo','ID Emprestimo','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'ID_Emprestimo' => $this->input->post('ID_Emprestimo'),
					'Data_Renegociacao' => convertDateYmd($this->input->post('Data_Renegociacao')),
					'Status_Renegociacao' => $this->input->post('Status_Renegociacao'),
                );

                $this->Renegociacao_model->update_renegociacao($ID_Renegociacao,$params);            
                redirect('renegociacao/index');
            }
            else
            {
				$this->load->model('Emprestimo_model');
                $data['all_emprestimo_pendente'] = $this->Emprestimo_model->get_all_emprestimo_pendente();
                
                $this->load->model('Forma_pagamento_model');
                $data['all_forma_pagamento'] = $this->Forma_pagamento_model->get_all_forma_pagamento();
            
                $this->load->model('Renegociacao_parcela_model');
                $data['renegociacao_parcela'] = $this->Renegociacao_parcela_model->get_all_parcela_by_renegociacao($ID_Renegociacao);

                $this->load->model('Pagamento_model');
                $data['valor_pago'] = $this->Pagamento_model->get_total_pago_by_emprestimo($data['renegociacao']['ID_Emprestimo']);
                $data['total_parcelas'] = $this->Renegociacao_parcela_model->get_total_parcela_by_renegociacao($ID_Renegociacao);
                $data['valor_pendente'] = ($data['renegociacao']['Valor_Emprestimo']+($data['renegociacao']['Valor_Emprestimo']*$data['renegociacao']['Percentual_Juros']/100)) - $data['valor_pago'];
                // var_dump($data);

                $data['_view'] = 'renegociacao/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('A renegociação que você está tentando acessar não existe.');
    } 

    function view($ID_Renegociacao)
    {   
        // check if the renegociacao exists before trying to edit it
        $data['renegociacao'] = $this->Renegociacao_model->get_renegociacao($ID_Renegociacao);
        
        if(isset($data['renegociacao']['ID_Renegociacao']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Data_Renegociacao','Data Renegociacao','required');
			$this->form_validation->set_rules('ID_Emprestimo','ID Emprestimo','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'ID_Emprestimo' => $this->input->post('ID_Emprestimo'),
					'Data_Renegociacao' => convertDateYmd($this->input->post('Data_Renegociacao')),
					'Status_Renegociacao' => $this->input->post('Status_Renegociacao'),
                );

                $this->Renegociacao_model->update_renegociacao($ID_Renegociacao,$params);            
                redirect('renegociacao/index');
            }
            else
            {
				$this->load->model('Emprestimo_model');
                $data['all_emprestimo_pendente'] = $this->Emprestimo_model->get_all_emprestimo_pendente();
                
                $this->load->model('Forma_pagamento_model');
                $data['all_forma_pagamento'] = $this->Forma_pagamento_model->get_all_forma_pagamento();
            
                $this->load->model('Renegociacao_parcela_model');
                $data['renegociacao_parcela'] = $this->Renegociacao_parcela_model->get_all_parcela_by_renegociacao($ID_Renegociacao);

                $this->load->model('Pagamento_model');
                $data['valor_pago'] = $this->Pagamento_model->get_total_pago_by_emprestimo($data['renegociacao']['ID_Emprestimo']);
                $data['total_parcelas'] = $this->Renegociacao_parcela_model->get_total_parcela_by_renegociacao($ID_Renegociacao);
                $data['valor_pendente'] = ($data['renegociacao']['Valor_Emprestimo']+($data['renegociacao']['Valor_Emprestimo']*$data['renegociacao']['Percentual_Juros']/100)) - $data['valor_pago'];
                // var_dump($data);

                $data['_view'] = 'renegociacao/view';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('A renegociação que você está tentando acessar não existe.');
    } 

    /*
     * Deleting renegociacao (também exclui os filhos na tabela renegociacao_parcela)
     */
    function remove($ID_Renegociacao)
    {
        $renegociacao = $this->Renegociacao_model->get_renegociacao($ID_Renegociacao);

        // check if the renegociacao exists before trying to delete it
        if(isset($renegociacao['ID_Renegociacao']))
        {
            $this->Renegociacao_model->delete_renegociacao($ID_Renegociacao);

            $this->load->model('Renegociacao_parcela_model');
            $this->Renegociacao_parcela_model->delete_parcelas_by_renegociacao($ID_Renegociacao);

            redirect('emprestimo/index');
        }
        else
            show_error('A renegociação que você está tentando deletar não existe.');
    }
    
}
