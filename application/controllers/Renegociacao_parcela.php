<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Renegociacao_parcela extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Renegociacao_parcela_model');
    } 

    /*
     * Listing of renegociacao_parcela
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('renegociacao_parcela/index?');
        $config['total_rows'] = $this->Renegociacao_parcela_model->get_all_renegociacao_parcela_count();
        $this->pagination->initialize($config);

        $data['renegociacao_parcela'] = $this->Renegociacao_parcela_model->get_all_renegociacao_parcela($params);
        
        $data['_view'] = 'renegociacao_parcela/index';
        $this->load->view('layouts/main',$data);
    }

    function quitar($ID_Renegociacao_Parcela)
    {   
        // check if the renegociacao_parcela exists before trying to edit it
        $data['renegociacao_parcela'] = $this->Renegociacao_parcela_model->get_renegociacao_parcela($ID_Renegociacao_Parcela);
        
        if(isset($data['renegociacao_parcela']['ID_Renegociacao_Parcela']))
        { 

                $this->load->model('Pagamento_model');

                #1. Icluir o saldo na tabela de pagamento

                $params = array(
                    'ID_Emprestimo' => $data['renegociacao_parcela']['ID_Emprestimo'],
                    'Valor_Pago' => $data['renegociacao_parcela']['Valor_Parcela'],
                    'Data_Pagamento' => date('Y/m/d'),
                );
                $pagamento_id = $this->Pagamento_model->add_pagamento($params);

                #1.1 Atualiza o saldo da conta
                #Retornar o valor na conta (TODO: Este código está duplicado em Emprestimo->Quitar)
                #Ao executar qualquer manutenção neste código, favor ajustar o código no Controler Emprestimo
                #TODO: Futramente a idéia é criar um método único para realizar essa ação e evitar repetições conforme melhores práticas (DRY)
                #TODO: Futuramente as contas poderão ser várias, mas atualmente apenas a conta ID = 1 está sendo utilizada
                $this->load->model('Conta_model');
                $conta_investimento = $this->Conta_model->get_conta(1); //TODO: Atualmente somente a conta ID = 1 é debitada ou creditada
                $conta_lucro = $this->Conta_model->get_conta(2); //TODO: Atualmente somente a conta ID = 1 é debitada ou creditada
                
                $params = array('Saldo_Conta' => ( $conta_investimento['Saldo_Conta'] + $data['renegociacao_parcela']['Valor_Parcela'] ) );
                $this->Conta_model->update_conta($conta_investimento['ID_Conta'],$params); //TODO: Atualmente somente a conta ID = 1 é debitada ou creditada


                #2. Atualizar o status e a data de quitação

                $params = array(
                    'Status_Parcela' => '1',
                    'ID_Pagamento' => $pagamento_id,
                    'Data_Quitacao' => date('Y/m/d H:i:s'),
                );
                $this->Renegociacao_parcela_model->update_renegociacao_parcela($ID_Renegociacao_Parcela,$params); 

                #3. Checa se ainda existem parcelas pendentes para a Renegociação (a qual a parcela pertence)
                #3.1 - Caso existam parcelas pendentes não faz mais nada
                #3.2 - Caso não existam parcelas pendentes a Renegociação Deve ser Concluída e o Status do Empréstimo deve ser quitado

                $total_pendente_restante = $this->Renegociacao_parcela_model->get_total_parcela_pendente_by_renegociacao($data['renegociacao_parcela']['ID_Renegociacao']);
               
                $this->load->model('Pagamento_model');
                $total_pago_emprestimo = $this->Pagamento_model->get_total_pago_by_emprestimo($data['renegociacao_parcela']['ID_Emprestimo']);
                $valor_original_emprestimo = $data['renegociacao_parcela']['Valor_Emprestimo'];
                $lucro_total = $total_pago_emprestimo-$valor_original_emprestimo;

                #6. Atualiza o Lucro do Empréstimo
                $this->load->model('Emprestimo_model');

                $params = array(
                    'Total_Pago' => $total_pago_emprestimo,
                    'Lucro_Total' => $lucro_total,
                );
                $this->Emprestimo_model->update_emprestimo($data['renegociacao_parcela']['ID_Emprestimo'],$params);

                if ($total_pendente_restante <= 0) {

                    #4. Atualiza Status da Renegociação para Concluída
                    $this->load->model('Renegociacao_model');
                    $params = array(
                        'Status_Renegociacao' => '1',
                    );
                    $this->Renegociacao_model->update_renegociacao($data['renegociacao_parcela']['ID_Renegociacao'],$params);

                    #5. Atualiza Status do Empréstimo para Quitado

                    $params = array(
                        'Status_Emprestimo' => '1',
                        'Total_Pago' => $total_pago_emprestimo,
                        'Lucro_Total' => $lucro_total,
                    );
                    $this->Emprestimo_model->update_emprestimo($data['renegociacao_parcela']['ID_Emprestimo'],$params);

                    #TODO: Bloqueia o Empréstimo para Alterações (Ideal criar um campo booleano para isto)

                    #Caso todas as parcelas tenham sido quitadas então vai para a view ao invés de edit 
                    redirect('renegociacao/view/'.$data['renegociacao_parcela']['ID_Renegociacao']);


                }

                redirect('renegociacao/edit/'.$data['renegociacao_parcela']['ID_Renegociacao']);
            
        }
        else
            show_error('A renegociação que você está tentando quitar não existe ou foi excluída.');
    } 

    /*
     * Adding a new renegociacao_parcela
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Valor_Parcela','Valor Parcela','required');
		$this->form_validation->set_rules('Data_Prazo_Parcela','Data Prazo Parcela','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ID_Forma_Pagamento' => $this->input->post('ID_Forma_Pagamento'),
				'ID_Renegociacao' => $this->input->post('ID_Renegociacao'),
				'Status_Parcela' => '0', //Por Default todad parcela deve ser incluida como Pendente
				'Valor_Parcela' => $this->input->post('Valor_Parcela'),
				'Data_Prazo_Parcela' => $this->input->post('Data_Prazo_Parcela'),
            );
            
            $renegociacao_parcela_id = $this->Renegociacao_parcela_model->add_renegociacao_parcela($params);
            redirect('renegociacao_parcela/index');
        }
        else
        {
			$this->load->model('Forma_pagamento_model');
			$data['all_forma_pagamento'] = $this->Forma_pagamento_model->get_all_forma_pagamento();

			$this->load->model('Renegociacao_model');
			$data['all_renegociacao'] = $this->Renegociacao_model->get_all_renegociacao();
            
            $data['_view'] = 'renegociacao_parcela/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    function addin()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('Valor_Parcela','Valor Parcela','required');
		$this->form_validation->set_rules('Data_Prazo_Parcela','Data Prazo Parcela','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'ID_Forma_Pagamento' => $this->input->post('ID_Forma_Pagamento'),
				'ID_Renegociacao' => $this->input->post('ID_Renegociacao'),
				'Status_Parcela' => '0', //Por Default todad parcela deve ser incluida como Pendente
				'Valor_Parcela' => $this->input->post('Valor_Parcela'),
				'Data_Prazo_Parcela' => convertDateYmd($this->input->post('Data_Prazo_Parcela')),
            );
            
            $renegociacao_parcela_id = $this->Renegociacao_parcela_model->add_renegociacao_parcela($params);

            //Se houver uma observação inclui o registro na tabela
            if ($this->input->post('Observacao_Emprestimo')!='') {

                $this->load->model('Observacao_emprestimo_model');

                $params = array(
                    'ID_Parcela' => $renegociacao_parcela_id,
                    'Observacao_Emprestimo' => $this->input->post('Observacao_Emprestimo'),
                );
                $observacao_emprestimo_id = $this->Observacao_emprestimo_model->add_observacao_emprestimo($params);
            }

            redirect('renegociacao/edit/'.$this->input->post('ID_Renegociacao'));
        }
        else
        {
            //TODO: Incluir mensagem de erro para o usuário
			redirect('renegociacao/edit/'.$this->input->post('ID_Renegociacao'));
        }
    } 

    /*
     * Editing a renegociacao_parcela
     */
    function edit($ID_Renegociacao_Parcela)
    {   
        // check if the renegociacao_parcela exists before trying to edit it
        $data['renegociacao_parcela'] = $this->Renegociacao_parcela_model->get_renegociacao_parcela($ID_Renegociacao_Parcela);
        
        if(isset($data['renegociacao_parcela']['ID_Renegociacao_Parcela']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('Valor_Parcela','Valor Parcela','required');
			$this->form_validation->set_rules('Data_Prazo_Parcela','Data Prazo Parcela','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'ID_Forma_Pagamento' => $this->input->post('ID_Forma_Pagamento'),
					'ID_Renegociacao' => $this->input->post('ID_Renegociacao'),
					'Status_Parcela' => $this->input->post('Status_Parcela'),
					'Valor_Parcela' => $this->input->post('Valor_Parcela'),
					'Data_Prazo_Parcela' => convertDateYmd($this->input->post('Data_Prazo_Parcela')),
                );

                $this->Renegociacao_parcela_model->update_renegociacao_parcela($ID_Renegociacao_Parcela,$params);            
                redirect('renegociacao_parcela/index');
            }
            else
            {
				$this->load->model('Forma_pagamento_model');
				$data['all_forma_pagamento'] = $this->Forma_pagamento_model->get_all_forma_pagamento();

				$this->load->model('Renegociacao_model');
				$data['all_renegociacao'] = $this->Renegociacao_model->get_all_renegociacao();

                $data['_view'] = 'renegociacao_parcela/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('A renegociação da parcela que você está tentando acessar não existe.');
    } 

    /*
     * Deleting renegociacao_parcela
     */
    function remove($ID_Renegociacao_Parcela)
    {
        $renegociacao_parcela = $this->Renegociacao_parcela_model->get_renegociacao_parcela($ID_Renegociacao_Parcela);

        // check if the renegociacao_parcela exists before trying to delete it
        if(isset($renegociacao_parcela['ID_Renegociacao_Parcela']))
        {
            $this->Renegociacao_parcela_model->delete_renegociacao_parcela($ID_Renegociacao_Parcela);
            redirect('renegociacao_parcela/index');
        }
        else
            show_error('A renegociação da parcela que você está tentando deletar não existe.');
    }

    function removein($ID_Renegociacao_Parcela)
    {
        $renegociacao_parcela = $this->Renegociacao_parcela_model->get_renegociacao_parcela($ID_Renegociacao_Parcela);

        // check if the renegociacao_parcela exists before trying to delete it
        if(isset($renegociacao_parcela['ID_Renegociacao_Parcela']))
        {
            $this->Renegociacao_parcela_model->delete_renegociacao_parcela($ID_Renegociacao_Parcela);
            redirect('renegociacao/edit/'.$renegociacao_parcela['ID_Renegociacao']);
        }
        else
            show_error('A renegociação da parcela que você está tentando deletar não existe.');
    }

    
}
