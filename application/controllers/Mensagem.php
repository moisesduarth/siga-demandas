<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Mensagem extends CI_Controller{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Investidor_model');

        //$this->output->enable_profiler(TRUE);

    } 

    function send($sender, $content, $receivers) {
        
        $API_KEY = "dc703ba6-203a-4e38-a7b7-93c15f73d52d";

        $DELIVERY_STATUS_ALL = "all";
        $DELIVERY_STATUS_DELIVERED = "true";
        $DELIVERY_STATUS_UNDELIVERED = "false";

        $REPORT_GROUP_TYPE_DAILY = "false";
        $REPORT_GROUP_TYPE_MONTHLY = "true";

        $service_url = "https://sms.comtele.com.br/api/v2/send";
        $payload = [
            "Sender" => $sender,
            "Content" => $content,
            "Receivers" => implode(",", $receivers)
        ];

        $headers = [
            "Content-Type: application/json",
            "Content-Length: ".strlen(json_encode($payload)),
            "auth-key:".$API_KEY
        ];

        $curl = curl_init($service_url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "POST");
        curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($payload));

        $server_output = curl_exec($curl);

        //var_dump($server_output);

        curl_close($curl);
        $res = json_decode($server_output, true);

        return $res;
    }

    /**
     * schedule_date deve ser passado no formato yyyy-MM-dd HH:mm:ss
     */
    function schedule($sender, $content, $schedule_date, $receivers) {

        $API_KEY = "dc703ba6-203a-4e38-a7b7-93c15f73d52d";

        $DELIVERY_STATUS_ALL = "all";
        $DELIVERY_STATUS_DELIVERED = "true";
        $DELIVERY_STATUS_UNDELIVERED = "false";

        $REPORT_GROUP_TYPE_DAILY = "false";
        $REPORT_GROUP_TYPE_MONTHLY = "true";

        $service_url = "https://sms.comtele.com.br/api/v2/schedule";
        $payload = [
            "Sender" => $sender,
            "Content" => $content,
            "ScheduleDate" => $schedule_date,
            "Receivers" => implode(",", $receivers)
        ];

        $headers = [
            "Content-Type: application/json",
            "Content-Length: ".strlen(json_encode($payload)),
            "auth-key:".$API_KEY
        ];

        $curl = curl_init($service_url);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_POST, true);
        curl_setopt($curl, CURLOPT_CUSTOMREQUEST, "POST");
        curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($payload));

        $server_output = curl_exec($curl);
        curl_close($curl);
        $res = json_decode($server_output, true);

        return $res;
    }

    function get_detailed_report($start_date, $end_date, $delivery_status) {
        
        $API_KEY = "dc703ba6-203a-4e38-a7b7-93c15f73d52d";

        $DELIVERY_STATUS_ALL = "all";
        $DELIVERY_STATUS_DELIVERED = "true";
        $DELIVERY_STATUS_UNDELIVERED = "false";

        $REPORT_GROUP_TYPE_DAILY = "false";
        $REPORT_GROUP_TYPE_MONTHLY = "true";

        $service_url = "https://sms.comtele.com.br/api/v2/detailedreporting?startDate=".urlencode($start_date)."&endDate=".urlencode($end_date)."&delivered=".$delivery_status;
        $headers = ["Content-Type: application/json","auth-key: ".$API_KEY];

        $curl = curl_init($service_url);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);

        $server_output = curl_exec($curl);
        curl_close($curl);
        $res = json_decode($server_output);

        return $res;
    }

    function get_consolidated_report($start_date, $end_date, $group_type) {
        
        $API_KEY = "dc703ba6-203a-4e38-a7b7-93c15f73d52d";

        $DELIVERY_STATUS_ALL = "all";
        $DELIVERY_STATUS_DELIVERED = "true";
        $DELIVERY_STATUS_UNDELIVERED = "false";

        $REPORT_GROUP_TYPE_DAILY = "false";
        $REPORT_GROUP_TYPE_MONTHLY = "true";

        $service_url = "https://sms.comtele.com.br/api/v2/consolidatedreporting?startDate=".urlencode($start_date)."&endDate=".urlencode($end_date)."&group=".$group_type;
        $headers = ["Content-Type: application/json","auth-key: ".$API_KEY];

        $curl = curl_init($service_url);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);

        $server_output = curl_exec($curl);
        curl_close($curl);
        $res = json_decode($server_output);

        return $res;
    }

    function enviar($ID_Emprestimo_Pai) {
        
        $this->load->model('Emprestimo_model');
        $emprestimo = $this->Emprestimo_model->get_emprestimo_by_pai($ID_Emprestimo_Pai);
        $valor_corrigido = $emprestimo['Valor_Emprestimo'] + ($emprestimo['Valor_Emprestimo']*$emprestimo['Percentual_Juros']/100);

        //Envia um SMS imediatamente informando sobre o empréstimo
        $resposta_sms = $this->send("Emprestimo", "Acordo Nr. $ID_Emprestimo_Pai. Valor: R$ " . $valor_corrigido . " Vencimento: " . formataData($emprestimo['Data_Pagamento']), [ $emprestimo['Celular'] ]);

        if ($resposta_sms['Success']) {
            $data['sms_enviado'] = true;
        } else {
            $data['sms_enviado'] = false;
        }

        $data['horario_envio_sms'] = date('H:i:s');

        //Agenda um lembrete um dia antes da data de pagamento
        $resposta_agendamento = $this->schedule("Cobranca", "Ola, so passando para te lembrar do pagamento que vence hoje. Valor: R$ " . $valor_corrigido . '. Contamos com sua parceria!', formataData($emprestimo['Data_Pagamento']) . ' 08:00:00', [ $emprestimo['Celular'] ]);
        if ($resposta_agendamento['Success']) {
            $data['sms_agendado'] = true;
        } else {
            $data['sms_agendado'] = false;
        }

        $data['horario_agendamento_sms'] = date('H:i:s');

        $data['codigo'] = $emprestimo['ID_Emprestimo'];
        $data['valor'] = $valor_corrigido;
        $data['vencimento'] = formataData($emprestimo['Data_Pagamento']);
        $data['celular'] = $emprestimo['Celular'];

        $data['_view'] = 'mensagem/emprestimo';
        $this->load->view('layouts/main',$data);

        //Redireciona o usuário para a página de empréstimos
        //redirect('emprestimo/index');

    }

    function renegociacao($ID_Renegociacao) {
        
        $this->load->model('Emprestimo_model');
        $this->load->model('Renegociacao_model');
        $this->load->model('Renegociacao_parcela_model');

        $renegociacao = $this->Renegociacao_model->get_renegociacao($ID_Renegociacao);
        $emprestimo = $this->Emprestimo_model->get_emprestimo($renegociacao['ID_Emprestimo']);
        $total_renegociacao = $this->Renegociacao_parcela_model->get_total_parcela_by_renegociacao($ID_Renegociacao);

        //Envia um SMS imediatamente informando sobre o empréstimo
        $this->send("Renegociacao", "Renegociacao Nr. $ID_Renegociacao. Valor: R$ " . $total_renegociacao, [ $emprestimo['Celular'] ]);

        //Agenda um lembrete um dia antes da data de pagamento para cada parcela renegociada
        $parcelas_renegociacao = $this->Renegociacao_parcela_model->get_all_parcela_by_renegociacao($ID_Renegociacao);
        foreach ($parcelas_renegociacao as $p) {
            $this->schedule("Cobranca", "Passando pra lembrar que nossa negociacao vence hoje. Valor: R$ " . $p['Valor_Parcela'] . '.', formataData($p['Data_Prazo_Parcela']) . ' 08:00:00', [ $emprestimo['Celular'] ]);
        }

        //Redireciona o usuário para a página de empréstimos
        redirect('renegociacao/index');

    }

    function quitar($ID_Emprestimo) {
        
        $this->load->model('Emprestimo_model');
        $emprestimo = $this->Emprestimo_model->get_emprestimo($ID_Emprestimo);
        $ID_Emprestimo_Pai = $emprestimo['ID_Emprestimo_Pai'];

        $valor_corrigido = $emprestimo['Valor_Emprestimo'] + ($emprestimo['Valor_Emprestimo']*$emprestimo['Percentual_Juros']/100);
        $Nome_Cliente = $emprestimo['Nome_Investidor'];

        //Envia um SMS imediatamente informando sobre o empréstimo
        $resposta_sms = $this->send("Emprestimo", "Recebemos de $Nome_Cliente o valor de R$ " . $valor_corrigido . " referente ao contrato $ID_Emprestimo, dia " . date('d/m/Y H:i:s'), [ $emprestimo['Celular'] ]);
        
        if ($this->ion_auth->is_cobrador()) {
            redirect('rota/index');
        } else {
            redirect('emprestimo/resumo/'.$ID_Emprestimo);
        }

    }


}

//print_r(schedule("remetente", "teste agendado via PHP", "2018-05-28 11:00", ["5516999994444"]))
//print_r(get_detailed_report("2018-05-01", "2018-05-28 23:59", $DELIVERY_STATUS_UNDELIVERED));
//print_r(get_consolidated_report("2018-05-01", "2018-05-28 23:59", $REPORT_GROUP_TYPE_MONTHLY));